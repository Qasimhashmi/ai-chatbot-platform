# ========================================
# .gitignore for Next.js Project
# ========================================
# This file tells Git which files and directories to ignore
# It ensures that unnecessary, sensitive, or generated files are not tracked by version control.

# ========================================
# Dependencies and Package Manager Files
# ========================================

# Node.js modules directory (contains all installed packages)
# These files can be easily reinstalled with `npm install` or `yarn install`
/node_modules/

# Yarn Plug'n'Play (PnP) specific files for yarn users
# If you're using Yarn with Plug'n'Play, these files should be ignored
.pnp
.pnp.*

# Yarn specific directories for caching and plugin handling
# Ignore internal Yarn files that are not necessary to track in Git
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# ========================================
# Testing and Coverage Files
# ========================================

# Coverage reports generated by testing tools like Jest
# These reports are usually generated during CI/CD runs or local testing
# You don't need them in your Git repository
/coverage/

# ========================================
# Next.js Build Output and Cache
# ========================================

# .next/ is the default directory where Next.js stores its build files and cached data
# These files are auto-generated during `next build` or `next dev`
# You don't need to track them in Git as they will be rebuilt
.next/

# Exported static HTML files generated by Next.js when you run `next export`
# This folder contains static assets only if you use `next export` to generate a static site
/out/

# ========================================
# Production Build Files
# ========================================

# /build folder may be generated by various tools for production builds
# These should not be committed to Git, as they can be re-generated during the build process
/build/

# ========================================
# Miscellaneous Files
# ========================================

# macOS system files (created automatically by macOS, like metadata for directories)
# These should not be tracked in version control
.DS_Store

# PEM files for SSL certificates
# These files should not be tracked in Git if you're working with local or production certificates
*.pem

# ========================================
# Debugging and Log Files
# ========================================

# Node.js/npm log files
# These are created when there's an error in npm/yarn commands
# They are not necessary to keep in your version control
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ========================================
# Environment Files
# ========================================

# .env* files contain environment variables with sensitive information (e.g., API keys, DB credentials)
# These should be ignored to prevent sensitive data from being tracked by Git
# You may choose to commit environment files under certain conditions, but generally avoid committing `.env` files
.env*
.env.local
.env.production
.env.development

# ========================================
# Deployment Files
# ========================================

# Ignore deployment platform-specific files (e.g., Vercel)
# These are automatically generated and should not be tracked
.vercel/

# ========================================
# TypeScript and Type Checking Files
# ========================================

# TypeScript build-related files
# These files are generated by the TypeScript compiler and don't need to be committed to Git
*.tsbuildinfo

# TypeScript declaration files for Next.js environment
# These files are auto-generated by Next.js and contain environment variable definitions and types
# These should not be committed
next-env.d.ts

# ========================================
# IDE and Editor Specific Files
# ========================================

# Ignore IDE-specific folders and configuration files
# These are user-specific configurations and shouldn't be tracked in the repository

# Visual Studio Code workspace files
.vscode/

# JetBrains IDEs (IntelliJ IDEA, WebStorm, etc.) configuration files
.idea/

# ========================================
# Cache Files
# ========================================

# Next.js cache files
# These are created to speed up builds, but they are not necessary to track
.next/cache/

# ========================================
# Lock Files (Optional)
# ========================================

# Lock files for package managers like npm and Yarn
# It is recommended to keep `yarn.lock` or `package-lock.json` to ensure consistent dependency installs across environments
# Uncomment the lines below if you prefer to ignore them

# npm lock file
# package-lock.json

# Yarn lock file
# yarn.lock
